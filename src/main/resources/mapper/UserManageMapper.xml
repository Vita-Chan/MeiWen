<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaomy.book_city.admin.mapper.UserManageMapper">
  <select id="queryUserVo" resultType="com.xiaomy.book_city.admin.entity.vo.UserVo">
    select sys_user.*, sys_role.name as "grade" from sys_user left join sys_role on sys_user.level = sys_role.id
    where 1=1 <include refid="userQueryBuilder"/> order by id desc
  </select>

  <select id="findUserById" resultType="com.xiaomy.book_city.admin.entity.vo.UserVo">
    select * from sys_user where id = #{userId}
  </select>

  <update id="removeUser">
    update sys_user set delete_status = #{deleteTime},
    state = ${@com.xiaomy.book_city.admin.constant.AdminConstants@REMOVE}
    where id = #{userId}
  </update>

  <update id="removeUsers">
      update sys_user set
        delete_status = #{deleteTime},
        state = ${@com.xiaomy.book_city.admin.constant.AdminConstants@REMOVE}
      where id in
    <foreach collection="users" index="index" item="item"
      separator="," open="(" close=")">
      #{item}
    </foreach>
  </update>

  <update id="updateUser">
    update sys_user
    <set>
      <if test="address != null">address = #{address},</if>
      <if test="description != null">description = #{description},</if>
      <if test="email != null">email = #{email},</if>
      <if test="nickName != null">nickname = #{nickName},</if>
      <if test="sex > 0">sex = #{sex},</if>
      <if test="telephone != null">telephone = #{telephone},</if>
      <if test="updateTime != null">update_time = #{updateTime},</if>
      <if test="level > 0">level = #{level}</if>
    </set>
    where id = #{id}
  </update>

  <insert id="addUserRole">
    insert into sys_user_role(
      user_id, role_id
    ) values (
      #{userId},
      #{roleId}
    )
  </insert>

  <insert id="addUser"  useGeneratedKeys="true" keyProperty="id" parameterType="com.xiaomy.book_city.admin.entity.vo.UserVo">
    insert into sys_user (
    address,
    create_time,
    description,
    email,
    nickname,
    password,
    sex,
    telephone,
    user_name
    )
    values (
    #{address},
    #{createTime},
    #{description},
    #{email},
    #{nickName},
    #{password},
    #{sex},
    #{telephone},
    #{userName}
    )
  </insert>

  <sql id="userQueryBuilder">
    <if test="!grade.isEmpty()">
      AND sys_user.level IN
      <foreach collection="grade" item="item" index="index" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
    <if test="createStart != null">
      <![CDATA[and sys_user.create_time >= #{createStart}]]>
    </if>
    <if test="createEnd != null">
      <![CDATA[and sys_user.create_time < #{createEnd}]]>
    </if>
      and sys_user.state = #{state}
  </sql>
</mapper>
