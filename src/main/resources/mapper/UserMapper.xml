<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaomy.book_city.app.mapper.UserMapper">
  <select id="findUserById" resultType="com.xiaomy.book_city.app.entity.vo.UserVo">
    select * from sys_user where ID = #{id}
  </select>

  <update id="updateUser">
    update sys_user
    <set>
      <if test="address != null">address = address,</if>
      <if test="description != null">description = description,</if>
      <if test="email != null">email = email,</if>
      <if test="nickName != null">nick_name = nickName,</if>
      <if test="sex > 0">sex = sex,</if>
      <if test="telephone != null">telephone = telephone,</if>
      <if test="updateTime != null">update_time = updateTime</if>
    </set>
    where id = #{id}
  </update>

  <select id="queryBuys" resultMap="resultBuy">
    select
    count(res_buy.id) as buyNum,
    sum(res_buy.price) as amount,
    res_data.id as id,
    res_data.bookname as bookname,
    res_data.author as author,
    res_data.createtime as createtime,
    res_data.synopsis as synopsis,
    res_data.classify as classify,
    res_data.cover as cover,
    res_data.order_by as orderBy,
    res_data.read_num as readNum
    from res_buy left join res_data on res_buy.book_id = res_data.id
    where res_buy.user_id = #{userId} and res_buy.state != 0
  </select>

  <resultMap id="resultBuy" type="com.xiaomy.book_city.app.entity.vo.BuyVo">
    <result column="buyNum" property="buyNum"></result>
    <result column="amount" property="amount"></result>
    <collection property="books" ofType="com.xiaomy.book_city.app.entity.Book">
      <result column="id" property="id"/>
      <result column="bookname" property="bookname"/>
      <result column="author" property="bookname"/>
      <result column="createtime" property="createtime"/>
      <result column="synopsis" property="synopsis"/>
      <result column="classify" property="classify"/>
      <result column="cover" property="cover"/>
      <result column="orderBy" property="orderBy"/>
      <result column="readNum" property="readNum"/>
    </collection>
  </resultMap>

  <select id="queryBrowse" resultType="com.xiaomy.book_city.app.entity.Book">
    select res_data.* from browse left join res_data on browse.book_id = res_data.id
    where browse.user_id = #{userId}
  </select>

  <select id="queryCollect" resultType="com.xiaomy.book_city.app.entity.portion.Collect">
    select collect.create_time as collectTime,res_data.* from collect left join res_data on collect.book_id = res_data.id
    where collect.user_id = #{userId}
  </select>

  <select id="removeBuy" resultType="java.lang.Integer">
    update res_buy set state = ${@com.xiaomy.book_city.app.constant.StateType@REMOVED}
    where user_id = #{userId} and id = #{buyId}
  </select>

  <insert id="addBuy">
    insert into res_buy(
      user_id,
      book_id,
      creat_time,
      price
    )values (
      #{userId},
      #{bookId},
      #{creatTime},
      #{price}
    )
  </insert>

  <insert id="addBrowse">
    insert into browse(
      user_id,
      book_id,
      creat_time
    )values (
      #{userId},
      #{bookId},
      #{creatTime}
    )
  </insert>

  <delete id="deleteBrowse">
    delete from browse where id = #{browseId} and user_id = #{userId}
  </delete>

  <insert id="addCollect">
    insert into collect(
      book_id,
      user_id,
      create_time
    )values (
      #{id},
      #{userId},
      #{collectTime}
    )
  </insert>

  <delete id="removeCollect">
    delete from collect where user_id = #{userId} and id = #{collectId}
  </delete>

  <select id="findUserByUsername" resultType="java.lang.String">
    select token from sys_user where user_name = #{username}
  </select>

  <select id="findUserUserDetailsGenerateByUsername"
    resultType="com.xiaomy.book_city.common.security.entity.UserDetailsGenerate">
    select sys_user.id as id, sys_user.user_name as username, sys_user.password as passwrod,
    sys_user.token as token
    from sys_user where user_name = #{username}
  </select>

  <select id="findRolesByUserId" resultType="java.lang.String">
    select sys_role.name from sys_user_role left join sys_role on sys_user_role.role_id = sys_role.id
    where sys_user_role.user_id = #{userId}
  </select>

  <update id="updateUserToken">
    update sys_user set
    <if test="token != null">token = #{token}</if>
    where id = #{id}
  </update>

  <select id="findUserVoByUsername" resultType="com.xiaomy.book_city.admin.entity.vo.UserVo">
    select * from sys_user where user_name = #{username}
  </select>

  <select id="findUsernameAndPassword" resultType="com.xiaomy.book_city.admin.entity.vo.UserVo">
    select * from sys_user where user_name = #{username} and password = #{password}
  </select>
</mapper>
